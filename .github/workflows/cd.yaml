name: Continuous Deployment

on:
  workflow_dispatch:

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_REPOSITORY_ENDPOINT: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/com.github.xxdanielngoxx/huji/api

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install
        working-directory: ./web
        run: npm ci

      - name: Build and sync angular application to backend
        working-directory: ./web
        run: ./sync_to_backend.sh

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Build API
        working-directory: ./api
        run: ./gradlew clean build

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | \
          docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com

      - name: Build docker image
        working-directory: ./api
        run: |
          if [[ ${{ github.ref_name }} =~ ^\d+\.\d+\.\d$ ]]
          then
            docker build \
            -t ${ECR_REPOSITORY_ENDPOINT}:${{ github.ref_name }} \
            -t ${ECR_REPOSITORY_ENDPOINT}:${{ github.sha }} \
            .
          else
            docker build \
            -t ${ECR_REPOSITORY_ENDPOINT}:${{ github.ref_name }}-${{ github.sha }} \
            -t ${ECR_REPOSITORY_ENDPOINT}:${{ github.sha }} \
            .
          fi

      - name: Publish docker image to ECR
        run: docker push ${ECR_REPOSITORY_ENDPOINT}:${{ github.sha }}
