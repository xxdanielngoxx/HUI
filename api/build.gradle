plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.diffplug.spotless' version '6.25.0'
	id "com.gorylenko.gradle-git-properties" version "2.4.1"
	id 'jacoco'
	id "org.sonarqube" version "5.1.0.4882"
}

group = 'com.github.xxdanielngoxx.hui'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jar {
	enabled = false
}

springBoot {
	buildInfo()
}

spotless {
	format 'misc', {
		target '*.gradle', '.gitattributes', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs()
		endWithNewline()
	}

	java {
		target 'src/*/java/**/*.java'

		googleJavaFormat()
		toggleOffOn()
	}

	yaml {
		target 'src/**/*.yaml'

		prettier()
	}

	sql {
		target 'src/main/resources/**/*.sql'

		dbeaver().configFile('dbeaver.properties')
	}

	freshmark {
		target '*.md'
	}
}

sonar {
	properties {
		property "sonar.projectKey", "xxdanielngoxx_hui_api"
		property "sonar.organization", "xxdanielngoxx"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'

	runtimeOnly 'org.postgresql:postgresql'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	runtimeOnly 'org.hsqldb:hsqldb:2.7.3' // TODO: Remove when setup CD is done
	implementation "org.flywaydb:flyway-database-hsqldb" // TODO: Remove when setup CD is done
}

tasks.named('test') {
	useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"

		showExceptions true
		exceptionFormat "full"
		showCauses true
		showStackTraces true

		showStandardStreams = false
	}
}

test {
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
	reports {
		xml.required = true
	}
}
